version: "3.9"
services:
  
  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ messaging port
      - "15672:15672" # Management UI port
    restart: unless-stopped
    volumes:
      - ./rabbitmq/setup_queues.py:/setup_queues.py # Mount the setup script
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 30s

  projects-api:
    container_name: projects-api
    build:
      context: ./PictuRAS
    ports:
      - "18018:18018"
      - "3000:3000"
    depends_on:
      - rabbitmq
      - mongo-server
    environment:

      # AWS S3 configuration
      AWS_ACCESS_KEY_ID: ROOTNAME
      AWS_SECRET_ACCESS_KEY: CHANGEME123
      AWS_REGION: us-east-1
      AWS_S3_BUCKET_NAME: images
  mongo-server:
    container_name: mongo-server
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      # Map MongoDB's data directory to a host directory or named volume
      - ./data/db:/data/db
      # Map your custom database.json file for initialization
      - ./data/database.json:/tmp/database.json
      # Map your initialization script
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # For MinIO API
      - "9001:9001"  # For MinIO Console
    volumes:
      - ~/minio/data:/data  # Mount the data directory
    environment:
      MINIO_ROOT_USER: ROOTNAME  # Set MinIO root user
      MINIO_ROOT_PASSWORD: CHANGEME123  # Set MinIO root password
    command: server /data --console-address ":9001"  # Start MinIO with console on port 9001
    restart: unless-stopped  # Automatically restart unless stopped manually


  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
  